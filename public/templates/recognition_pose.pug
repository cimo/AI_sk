<!DOCTYPE html>
<html>
    <head>
        <title>Recognition pose</title>
        
        <!-- Meta -->
        <meta charset="UTF-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5, user-scalable=1">
        <meta name="description" content="..."/>
        <meta name="keywords" content="..."/>
        <meta name="robots" content="index, follow"/>
        <meta name="csrf-token" content="#{csrfToken}">
        
        <!-- Favicon -->
        <link href="images/favicon.ico" rel="icon" type="image/x-icon">

        <!-- Css -->
        <link href="css/recognition_pose.css" rel="stylesheet"/>
    </head>
    <body>
        <div id="main_container">
            include include/websocket.pug

            include include/camera.pug

            <p id="info"></p>

            <div id="command_container">
                <div>
                    <button class="start_capture" type="button">Start capture</button>
                    <button class="stop_capture" type="button">Stop capture</button>
                </div>
                <div>
                    <button class="find_point_image" type="button">Find point from image</button>
                </div>
            </div>
            <div id="prediction">
                <img class="image"/>
                <ul class="position"></ul>
                <ul class="distance"></ul>
            </div>
        </div>

        <script src="js/library/jquery_3.4.1.min.js"></script>
        <script src="js/library/socket.io_2.3.0.min.js"></script>
        <script src="https://unpkg.com/@tensorflow/tfjs"></script>
        <script src="https://unpkg.com/@tensorflow-models/posenet"></script>
        <script src="js/Camera.js"></script>
        <script src="js/RecognitionPose.js"></script>

        script.
            $(document).ready(() => {
                let socketIo = io();

                socketIo.connect("https://lsv2.machine.local");

                socketIo.on("broadcast", (data) => {
                    $("#ws_container .ws_broadcast").html(data);
                });
                socketIo.on("serverTime", (data) => {
                    $("#ws_container .ws_serverTime").html(data);
                });
                socketIo.on("message", (data) => {
                    $("#ws_container .ws_message").html(data);
                });

                let recognitionPose = new RecognitionPose(socketIo);

                recognitionPose.createRealtimePosition();
                recognitionPose.eventLogic();
            });
    </body>
</html>